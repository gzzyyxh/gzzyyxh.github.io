<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>What&#39;s Maching Learning?</title>
      <link href="2021/04/17/What-s-Maching-Learning/"/>
      <url>2021/04/17/What-s-Maching-Learning/</url>
      
        <content type="html"><![CDATA[<p>贴上了黄博的github笔记</p><span id="more"></span><ol><li>黄海广github： <a href="https://github.com/fengdu78">https://github.com/fengdu78</a></li><li>ML：笔记在线阅读： <a href="http://www.ai-start.com/ml2014/">http://www.ai-start.com/ml2014/</a></li><li>ML： github：<a href="https://github.com/fengdu78/Coursera-ML-AndrewNg-Notes">https://github.com/fengdu78/Coursera-ML-AndrewNg-Notes</a></li><li>DL：笔记在线阅读： <a href="http://www.ai-start.com/dl2017/">http://www.ai-start.com/dl2017/</a></li><li>DL： github： <a href="https://github.com/fengdu78/deeplearning_ai_books">https://github.com/fengdu78/deeplearning_ai_books</a></li><li>数据科学笔记：github：<a href="https://github.com/fengdu78/Data-Science-Notes">https://github.com/fengdu78/Data-Science-Notes</a></li><li>统计学习方法代码复现：github：<a href="https://github.com/wzyonggege/statistical-learning-method">https://github.com/wzyonggege/statistical-learning-method</a> or <a href="https://github.com/WenDesi/lihang_book_algorithm">https://github.com/WenDesi/lihang_book_algorithm</a></li><li>李宏毅ML教材习题解答及实现： <a href="https://github.com/Doraemonzzz/Learning-from-data">https://github.com/Doraemonzzz/Learning-from-data</a></li><li>李宏毅讲义： <a href="https://pan.baidu.com/s/1t0EpHwx46u_yzgPfpzOJyg">https://pan.baidu.com/s/1t0EpHwx46u_yzgPfpzOJyg</a> key：h74o </li><li>吴恩达有关tensorflow的介绍：对应4笔记p251</li><li>tensorflow简要介绍： <a href="https://link.zhihu.com/?target=https://github.com/aymericdamien/TensorFlow-Examples">https://link.zhihu.com/?target=https%3A//github.com/aymericdamien/TensorFlow-Examples</a></li><li>DL with python：<a href="https://github.com/fchollet/deep-learning-with-python-notebooks">https://github.com/fchollet/deep-learning-with-python-notebooks</a></li><li>pytorch入门：<a href="https://github.com/yunjey/pytorch-tutorial">https://github.com/yunjey/pytorch-tutorial</a></li><li>tf，pytorch，keras样例资源：</li></ol><p>一、TensorFlow</p><p>资源地址：</p><p><a href="https://github.com/aymericdamien/TensorFlow-Examples">https://github.com/aymericdamien/TensorFlow-Examples</a></p><p>资源介绍：</p><p>本资源旨在通过示例轻松深入了解TensorFlow。 为了便于阅读，它包括notebook和带注释的源代码。</p><p>它适合想要找到关于TensorFlow的清晰简洁示例的初学者。 除了传统的“原始”TensorFlow实现，您还可以找到最新的TensorFlow API实践（例如layers,estimator,dataset, ……）。</p><p>最后更新（07/25/2018）：添加新示例（GBDT，Word2Vec）和 TF1.9兼容性！ （TF v1.9 +推荐）。</p><p>配置环境：</p><p>python 3.6以上，TensorFlow 1.8+</p><p>资源目录：</p><p>0  - 先决条件</p><p>机器学习简介</p><p>MNIST数据集简介</p><p>1  - 简介</p><p>Hello World(包含notebook和py源代码)。非常简单的例子，学习如何使用TensorFlow打印“hello world”。</p><p>基本操作(包含notebook和py源代码)。一个涵盖TensorFlow基本操作的简单示例。</p><p>TensorFlow Eager API基础知识(包含notebook和py源代码)。开始使用TensorFlow的Eager API。</p><p>2  - 基础模型</p><p>线性回归(包含notebook和py源代码)。使用TensorFlow实现线性回归。</p><p>线性回归（eager api）(包含notebook和py源代码)。使用TensorFlow的Eager API实现线性回归。</p><p>Logistic回归(包含notebook和py源代码)。使用TensorFlow实现Logistic回归。</p><p>Logistic回归（eager api）(包含notebook和py源代码)。使用TensorFlow的Eager API实现Logistic回归。</p><p>最近邻(包含notebook和py源代码)。使用TensorFlow实现最近邻算法。</p><p>K-Means(包含notebook和py源代码)。使用TensorFlow构建K-Means分类器。</p><p>随机森林(包含notebook和py源代码)。使用TensorFlow构建随机森林分类器。</p><p>Gradient Boosted Decision Tree（GBDT）(包含notebook和py源代码)。使用TensorFlow构建梯度提升决策树（GBDT）。</p><p>Word2Vec（词嵌入）(包含notebook和py源代码)。使用TensorFlow从Wikipedia数据构建词嵌入模型（Word2Vec）。</p><p>3  - 神经网络</p><p>监督学习部分</p><p>简单神经网络(包含notebook和py源代码)。构建一个简单的神经网络（如多层感知器）来对MNIST数字数据集进行分类。 Raw TensorFlow实现。</p><p>简单神经网络（tf.layers / estimator api）(包含notebook和py源代码)。使用TensorFlow’layers’和’estimator’API构建一个简单的神经网络（如：Multi-layer Perceptron）来对MNIST数字数据集进行分类。</p><p>简单神经网络（Eager API）(包含notebook和py源代码)。使用TensorFlow Eager API构建一个简单的神经网络（如多层感知器）来对MNIST数字数据集进行分类。</p><p>卷积神经网络(包含notebook和py源代码)。构建卷积神经网络以对MNIST数字数据集进行分类。 Raw TensorFlow实现。</p><p>卷积神经网络（tf.layers / estimator api）(包含notebook和py源代码)。使用TensorFlow’layers’和’estimator’API构建卷积神经网络，对MNIST数字数据集进行分类。</p><p>递归神经网络（LSTM）(包含notebook和py源代码)。构建递归神经网络（LSTM）以对MNIST数字数据集进行分类。</p><p>双向LSTM(包含notebook和py源代码)。构建双向递归神经网络（LSTM）以对MNIST数字数据集进行分类。</p><p>动态LSTM(包含notebook和py源代码)。构建一个递归神经网络（LSTM），执行动态计算以对不同长度的序列进行分类。</p><p>无监督</p><p>自动编码器(包含notebook和py源代码)。构建自动编码器以将图像编码为较低维度并重新构建它。</p><p>变分自动编码器（(包含notebook和py源代码)。构建变分自动编码器（VAE），对噪声进行编码和生成图像。</p><p>GAN（Generative Adversarial Networks）(包含notebook和py源代码)。构建生成对抗网络（GAN）以从噪声生成图像。</p><p>DCGAN（Deep Convolutional Generative Adversarial Networks）(包含notebook和py源代码)。构建深度卷积生成对抗网络（DCGAN）以从噪声生成图像。</p><p>4  - 工具</p><p>保存和还原模型(包含notebook和py源代码)。使用TensorFlow保存和还原模型。</p><p>Tensorboard  - 图形和损失可视化(包含notebook和py源代码)。使用Tensorboard可视化计算图并绘制损失。</p><p>Tensorboard  - 高级可视化(包含notebook和py源代码)。深入了解Tensorboard;可视化变量，梯度等……</p><p>5  - 数据管理</p><p>构建图像数据集(包含notebook和py源代码)。使用TensorFlow数据队列，从图像文件夹或数据集文件构建您自己的图像数据集。</p><p>TensorFlow数据集API(包含notebook和py源代码)。引入TensorFlow数据集API以优化输入数据管道。</p><p>6  - 多GPU</p><p>多GPU的基本操作(包含notebook和py源代码)。在TensorFlow中引入多GPU的简单示例。</p><p>在多GPU上训练神经网络(包含notebook和py源代码)。一个清晰简单的TensorFlow实现，用于在多个GPU上训练卷积神经网络。</p><p>数据集</p><p>一些示例需要MNIST数据集进行训练和测试。官方网站：<a href="http://yann.lecun.com/exdb/mnist/">http://yann.lecun.com/exdb/mnist/</a></p><p>二、Keras</p><p>资源地址：</p><p><a href="https://github.com/erhwenkuo/deep-learning-with-keras-notebooks">https://github.com/erhwenkuo/deep-learning-with-keras-notebooks</a></p><p>资源介绍：</p><p>这个github的repository主要是ErhWen Kuo在学习Keras的一些记录及练习。希望在学习过程中发现到一些好的信息与示例也可以对想要学习使用Keras来解决问题的同学带来帮助。这些notebooks主要是使用Python 3.6与Keras 2.1.1版本跑在一台配置Nivida 1080Ti的Windows 10的机台所产生的结果，但有些部份会参杂一些Tensorflow与其它的函式库的介绍。</p><p>配置环境：</p><p>python 3.6以上，Keras 2.1.1</p><p>资源目录：</p><p>0.图象数据集/工具介绍</p><p>0.0: COCO API解说与简单示例</p><p>0.1:土炮自制扑克牌图象数据集</p><p>0.2:使用Pillow来进行图像处理</p><p>1.Keras API示例</p><p>1.0:使用图像增强来进行深度学习</p><p>1.1:如何使用Keras函数式API进行深度学习</p><p>1.2:从零开始构建VGG网络来学习Keras</p><p>1.3:使用预训练的模型来分类照片中的物体</p><p>1.4:使用图像增强来训练小数据集</p><p>1.5:使用预先训练的卷积网络模型</p><p>1.6:卷积网络模型学习到什么的可视化</p><p>1.7:构建自动编码器（Autoencoder）</p><p>1.8:序列到序列（Seq-to-Seq）学习介绍</p><p>1.9: One-hot编码工具程序介绍</p><p>1.10:循环神经网络（RNN）介绍</p><p>1.11: LSTM的返回序列和返回状态之间的区别</p><p>1.12:用LSTM来学习英文字母表顺序</p><p>2.图像分类（Image Classification）</p><p>2.0: Julia（Chars74K）字母图像分类</p><p>2.1:交通标志图像分类</p><p>2.2:辛普森卡通图像角色分类</p><p>2.3:时尚服饰图像分类</p><p>2.4:人脸关键点辨识</p><p>2.5: Captcha验证码分类</p><p>2.6: Mnist手写图像分类（MLP）</p><p>2.7: Mnist手写图像分类（CNN）</p><p>3.目标检测（Object Recognition）</p><p>3.0: YOLO目标检测算法概念与介绍</p><p>3.1: YOLOv2目标检测示例</p><p>3.2:浣熊（Racoon）检测-YOLOv2模型训练与调整</p><p>3.3:浣熊（Racoon）检测-YOLOv2模型的使用</p><p>3.4:袋鼠（Kangaroo）检测-YOLOv2模型训练与调整</p><p>3.5:双手（Hands）检测-YOLOv2模型训练与调整</p><p>3.6:辛普森卡通图象角色（Simpson）检测-YOLOv2模型训练与调整</p><p>3.7: MS COCO图象检测-YOLOv2模型训练与调整</p><p>4.物体分割（Object Segmentation）</p><p>5.关键点检测（Keypoint Detection）</p><p>6.图象标题（Image Caption）</p><p>7.人脸检测识别（Face Detection/Recognition）</p><p>7.0:人脸检测- OpenCV（Haar特征分类器）</p><p>7.1:人脸检测- MTCNN（Multi-task Cascaded Convolutional Networks）</p><p>7.2:人脸识别-脸部检测、对齐&amp;裁剪</p><p>7.3:人脸识别-人脸部特征提取&amp;人脸分类器</p><p>7.4:人脸识别-转换、对齐、裁剪、特征提取与比对</p><p>7.5:脸部关键点检测（dlib）</p><p>7.6:头部姿态（Head pose）估计（dlib）</p><p>8.自然语言处理（Natural Language Processing）</p><p>8.0:词嵌入（word embeddings）介绍</p><p>8.1:使用结巴（jieba）进行中文分词</p><p>8.2: Word2vec词嵌入（word embeddings）的基本概念</p><p>8.3:使用结巴（jieba）进行歌词分析</p><p>8.4:使用gensim训练中文词向量（word2vec）</p><p>三、Pytorch</p><p>资源地址：</p><p><a href="https://github.com/yunjey/pytorch-tutorial">https://github.com/yunjey/pytorch-tutorial</a></p><p>资源介绍：</p><p>这个资源为深度学习研究人员提供了学习PyTorch的教程代码大多数模型都使用少于30行代码实现。 在开始本教程之前，建议先看完Pytorch官方教程。</p><p>配置环境：</p><p>python 2.7或者3.5以上，pytorch 0.4</p><p>资源目录：</p><p>1.基础知识</p><p>PyTorch基础知识</p><p>线性回归</p><p>Logistic回归</p><p>前馈神经网络</p><p>2.中级</p><p>卷积神经网络</p><p>深度残差网络</p><p>递归神经网络</p><p>双向递归神经网络</p><p>语言模型（RNN-LM）</p><p>3.高级</p><p>生成性对抗网络</p><p>变分自动编码器</p><p>神经风格转移</p><p>图像字幕（CNN-RNN）</p><p>4.工具</p><p>PyTorch中的TensorBoard</p><ol start="15"><li>sql： 语法查询：<a href="http://www.w3school.com.cn/sql/index.asp">http://www.w3school.com.cn/sql/index.asp</a></li><li>sql： 语法题库：<a href="https://leetcode-cn.com/problemset/database/">https://leetcode-cn.com/problemset/database/</a></li><li>Ubuntu 18.04深度学习环境配置（CUDA9.0+CUDNN7.4+TensorFlow1.8：<a href="https://mp.weixin.qq.com/s?__biz=MzIwODI2NDkxNQ==&amp;mid=2247484401&amp;idx=1&amp;sn=73e97612c8a8c6cbb65461f999c024ff&amp;source=41#wechat_redirect">https://mp.weixin.qq.com/s?__biz=MzIwODI2NDkxNQ==&amp;mid=2247484401&amp;idx=1&amp;sn=73e97612c8a8c6cbb65461f999c024ff&amp;source=41#wechat_redirect</a></li></ol><p>论文相关和大师只之作：<br>18. 徐亦达老师课件及下载（中文目录）：<a href="https://github.com/roboticcam/machine-learning-notes">https://github.com/roboticcam/machine-learning-notes</a><br>19. 华校专老师笔记： <a href="https://github.com/huaxz1986">https://github.com/huaxz1986</a><br>20. 华校专网站： <a href="http://www.huaxiaozhuan.com/">http://www.huaxiaozhuan.com/</a><br>21. 论文排班教程： <a href="https://mp.weixin.qq.com/s?__biz=MzIwODI2NDkxNQ==&amp;mid=2247484392&amp;idx=1&amp;sn=6fb2fe9f619154bcbf0b6d8475e56901&amp;source=41#wechat_redirect">https://mp.weixin.qq.com/s?__biz=MzIwODI2NDkxNQ==&amp;mid=2247484392&amp;idx=1&amp;sn=6fb2fe9f619154bcbf0b6d8475e56901&amp;source=41#wechat_redirect</a><br>22. zotero论文管理工具：<a href="https://mp.weixin.qq.com/s?__biz=MzIwODI2NDkxNQ==&amp;mid=2247484429&amp;idx=1&amp;sn=5663338e5c76374512fa354d68b5a67d&amp;source=41#wechat_redirect">https://mp.weixin.qq.com/s?__biz=MzIwODI2NDkxNQ==&amp;mid=2247484429&amp;idx=1&amp;sn=5663338e5c76374512fa354d68b5a67d&amp;source=41#wechat_redirect</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>my first blog</title>
      <link href="2021/04/17/my-first-blog/"/>
      <url>2021/04/17/my-first-blog/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>先发一篇试试^_^</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Test</title>
      <link href="2021/04/17/Test/"/>
      <url>2021/04/17/Test/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>A blog for test.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/04/16/hello-world/"/>
      <url>2021/04/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>搞了**的整整两天，我的个人blog终于能在云端访问了^^^^</p><span id="more"></span><p>After two fucking days, Lao Tzu’s personal blog is finally online, fuck</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
